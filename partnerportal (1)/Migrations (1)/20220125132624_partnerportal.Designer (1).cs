// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using partnerportal.Models;

namespace partnerportal.Migrations
{
    [DbContext(typeof(toolkittpmpsandboxContext))]
    [Migration("20220125132624_partnerportal")]
    partial class partnerportal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("partnerportal.Models.ClmApiLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("LogDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_ApiLog");
                });

            modelBuilder.Entity("partnerportal.Models.ClmCustomer", b =>
                {
                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("FkIndustryId")
                        .HasColumnName("FK_IndustryId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.ToTable("CLM_Customer");
                });

            modelBuilder.Entity("partnerportal.Models.ClmDomainProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool?>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_DomainProvider");
                });

            modelBuilder.Entity("partnerportal.Models.ClmEmailSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailSystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_EmailSystem");
                });

            modelBuilder.Entity("partnerportal.Models.ClmHostingProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool?>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_HostingProvider");
                });

            modelBuilder.Entity("partnerportal.Models.ClmIndustry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.ToTable("CLM_Industry");
                });

            modelBuilder.Entity("partnerportal.Models.ClmLeadsFromCorsiva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalRemarks")
                        .HasColumnName("AdditionalRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnName("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnName("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnName("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnName("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnName("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceRequired")
                        .HasColumnName("ServiceRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDelete")
                        .HasColumnName("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_LeadsFromCorsiva");
                });

            modelBuilder.Entity("partnerportal.Models.ClmLeadsStatusLogsToCorsiva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeOfChange")
                        .HasColumnName("DateTimeOfChange")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkLeadsId")
                        .HasColumnName("FkLeadsId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnName("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDelete")
                        .HasColumnName("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<string>("StatusCode")
                        .HasColumnName("StatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CLM_LeadsStatusLogsToCorsiva");
                });

            modelBuilder.Entity("partnerportal.Models.ClmLeadsToCorsiva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalRemarks")
                        .HasColumnName("AdditionalRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnName("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnName("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnName("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnName("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("FkCorsivaStaffId")
                        .HasColumnName("FkCorsivaStaffId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnName("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceRequired")
                        .HasColumnName("ServiceRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDelete")
                        .HasColumnName("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_LeadsToCorsiva");
                });

            modelBuilder.Entity("partnerportal.Models.ClmMaintenanceHourly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FkProjectId")
                        .HasColumnName("FK_ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceHourLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_MaintenanceHourly");
                });

            modelBuilder.Entity("partnerportal.Models.ClmMaintenanceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkProjectId")
                        .HasColumnName("FK_ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("FkStaffId")
                        .HasColumnName("FK_StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_MaintenanceLog");
                });

            modelBuilder.Entity("partnerportal.Models.ClmMaintenanceMonthly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FkProjectId")
                        .HasColumnName("FK_ProjectId")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_MaintenanceMonthly");
                });

            modelBuilder.Entity("partnerportal.Models.ClmMaintenanceReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkProjectId")
                        .HasColumnName("FK_ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("FkStaffId")
                        .HasColumnName("FK_StaffId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("MonthYear")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_MaintenanceReport");
                });

            modelBuilder.Entity("partnerportal.Models.ClmPartner", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnName("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnName("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnName("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnName("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnName("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnName("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnName("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnName("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnName("Remarks")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SecurityStamp")
                        .HasColumnName("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDelete")
                        .HasColumnName("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnName("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CLM_Partner");
                });

            modelBuilder.Entity("partnerportal.Models.ClmPartnerSignedAgreements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfAgreement")
                        .HasColumnName("DateOfAgreement")
                        .HasColumnType("datetime2");

                    b.Property<string>("FkPartnerId")
                        .HasColumnName("FK_PartnerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignedAgreementsURL")
                        .HasColumnName("SignedAgreementsURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDelete")
                        .HasColumnName("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<int>("TypeOfAgreement")
                        .HasColumnName("TypeOfAgreement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CLM_PartnerSignedAgreement");
                });

            modelBuilder.Entity("partnerportal.Models.ClmProject", b =>
                {
                    b.Property<string>("Amemail")
                        .HasColumnName("AMEmail")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Domain")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("DomainCost")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EmailCost")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("EmailSystemExpire")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailSystemOwner")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("FkCustomerId")
                        .HasColumnName("FK_CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("FkEmailSystemId")
                        .HasColumnName("FK_EmailSystemId")
                        .HasColumnType("int");

                    b.Property<int?>("FkdomainProvider")
                        .HasColumnName("FKDomainProvider")
                        .HasColumnType("int");

                    b.Property<int?>("Forecast")
                        .HasColumnType("int");

                    b.Property<string>("ForecastAmount")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ForecastStart")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("HostingCost")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("MaintCost")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("MaintExpire")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MaintStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaintainBy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("Phase")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectNature")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ShortLink")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool?>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.ToTable("CLM_Project");
                });

            modelBuilder.Entity("partnerportal.Models.ClmProjectBackUp", b =>
                {
                    b.Property<int>("FkProjectId")
                        .HasColumnName("FK_ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.ToTable("CLM_ProjectBackUp");
                });

            modelBuilder.Entity("partnerportal.Models.ClmProjectCredential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CredentialInfos")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("FkProjectId")
                        .HasColumnName("FK_ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_ProjectCredential");
                });

            modelBuilder.Entity("partnerportal.Models.ClmProjectCredentialLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkProjectId")
                        .HasColumnName("FK_ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("FkStaffId")
                        .HasColumnName("FK_StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_ProjectCredentialLog");
                });

            modelBuilder.Entity("partnerportal.Models.ClmProjectDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Domain")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("Expiry")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FkProjectId")
                        .HasColumnName("FK_ProjectID")
                        .HasColumnType("int");

                    b.Property<int?>("Owner")
                        .HasColumnType("int");

                    b.Property<int?>("Provider")
                        .HasColumnType("int");

                    b.Property<bool?>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_ProjectDomain");
                });

            modelBuilder.Entity("partnerportal.Models.ClmProjectEmailSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("Expiry")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FkProjectId")
                        .HasColumnName("FK_ProjectID")
                        .HasColumnType("int");

                    b.Property<int?>("Owner")
                        .HasColumnType("int");

                    b.Property<int?>("Provider")
                        .HasColumnType("int");

                    b.Property<bool?>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_ProjectEmailSystem");
                });

            modelBuilder.Entity("partnerportal.Models.ClmProjectHosting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("Expiry")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FkProjectId")
                        .HasColumnName("FK_ProjectID")
                        .HasColumnType("int");

                    b.Property<int?>("Owner")
                        .HasColumnType("int");

                    b.Property<int?>("Provider")
                        .HasColumnType("int");

                    b.Property<bool?>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_ProjectHosting");
                });

            modelBuilder.Entity("partnerportal.Models.ClmProjectHourlyMaintenace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("FkProjectId")
                        .HasColumnType("int");

                    b.Property<string>("HourPackge")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<double?>("HoursSpent")
                        .HasColumnType("float");

                    b.Property<DateTime?>("PurchasedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_ProjectHourlyMaintenace");
                });

            modelBuilder.Entity("partnerportal.Models.ClmProjectHourlyMaintenaceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkProjectHourlyMaintenaceId")
                        .HasColumnType("int");

                    b.Property<string>("HourResonRequest")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<double?>("HoursSpent")
                        .HasColumnType("float");

                    b.Property<bool?>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_ProjectHourlyMaintenaceRecord");
                });

            modelBuilder.Entity("partnerportal.Models.ClmProjectMonthlyMaintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FkProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Per")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CLM_ProjectMonthlyMaintenance");
                });

            modelBuilder.Entity("partnerportal.Models.ClmQuotation", b =>
                {
                    b.Property<DateTime>("Finalised")
                        .HasColumnName("finalised")
                        .HasColumnType("date");

                    b.Property<int>("FkPreviousQuotationRef")
                        .HasColumnName("fkPreviousQuotationRef")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("QuotationJson")
                        .IsRequired()
                        .HasColumnName("quotationJson")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<decimal>("QuotationVersion")
                        .HasColumnName("quotationVersion")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnName("remarks")
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true)
                        .HasMaxLength(10);

                    b.Property<int>("SoftDelete")
                        .HasColumnName("softDelete")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalQuote")
                        .HasColumnName("totalQuote")
                        .HasColumnType("decimal(18, 2)");

                    b.ToTable("CLM_Quotation");
                });

            modelBuilder.Entity("partnerportal.Models.ClmResetPasswordModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnName("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnName("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CLM_ResetPasswordModel");
                });

            modelBuilder.Entity("partnerportal.Models.ClmSolutionBrochures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrochureURL")
                        .HasColumnName("BrochureURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBrochure")
                        .HasColumnName("DateOfBrochure")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SoftDelete")
                        .HasColumnName("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TitleOfBrochure")
                        .HasColumnName("TitleOfBrochure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfBrochure")
                        .HasColumnName("TypeOfBrochure")
                        .HasColumnType("int");

                    b.Property<double>("VersionNumber")
                        .HasColumnName("VersionNumber")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CLM_SolutionBrochures");
                });

            modelBuilder.Entity("partnerportal.Models.ClmStaff", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.ToTable("CLM_Staff");
                });

            modelBuilder.Entity("partnerportal.Models.ClmStaffCredentialRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkProjectId")
                        .HasColumnName("FK_ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("FkStaffId")
                        .HasColumnName("FK_StaffId")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CLM_StaffCredentialRequest");
                });

            modelBuilder.Entity("partnerportal.Models.ClmTechnolodyUsed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Technology")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CLM_TechnolodyUsed");
                });

            modelBuilder.Entity("partnerportal.Models.ClmTicketImages", b =>
                {
                    b.Property<int>("FkTicketId")
                        .HasColumnName("FK_TicketId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TicketImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CLM_TicketImages");
                });

            modelBuilder.Entity("partnerportal.Models.ClmTicketReply", b =>
                {
                    b.Property<bool>("Approve")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkTicketiId")
                        .HasColumnName("FK_TicketiId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IsStaff")
                        .HasColumnType("int");

                    b.Property<string>("Messages")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PersonReplyed")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.ToTable("CLM_TicketReply");
                });

            modelBuilder.Entity("partnerportal.Models.ClmTickets", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkCustomerId")
                        .HasColumnName("FK_CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("FkProjectId")
                        .HasColumnName("FK_ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Messages")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("StaffAssigned")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.ToTable("CLM_Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
